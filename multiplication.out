start: s
accept: ac
reject: rj
blank: _

s 0 -> barrier 0 <
s 1 -> barrier 1 <
barrier _ -> findLastA B >
findLastA B -> findLastA B >
findLastA 0 -> findLastA 0 >
findLastA 1 -> findLastA 1 >
findLastA * -> copyDig * <
findLastA O -> copyDig O <
findLastA Z -> copyDig Z <
copyDig 0 -> copy0 Z <
copyDig 1 -> copy1 O <
copyDig B -> putPlus B <
copy0 0 -> copy0 0 <
copy0 1 -> copy0 1 <
copy0 B -> copy0 B <
copy0 _ -> findLastA 0 >
copy1 0 -> copy1 0 <
copy1 1 -> copy1 1 <
copy1 B -> copy1 B <
copy1 _ -> findLastA 1 >
putPlus 0 -> putPlus 0 <
putPlus 1 -> putPlus 1 <
putPlus _ -> refresh + >
putPlus + -> refresh + >
refresh 0 -> refresh 0 >
refresh 1 -> refresh 1 >
refresh O -> refresh 1 >
refresh Z -> refresh 0 >
refresh B -> refresh B >
refresh * -> isB0 * >
isB0 0 -> isB0 0 >
isB0 _ -> clearAll _ <
isB0 1 -> findEndB 1 >
clearAll B -> clearAll _ <
clearAll 0 -> clearAll _ <
clearAll 1 -> clearAll _ <
clearAll Z -> clearAll _ <
clearAll O -> clearAll _ <
clearAll * -> clearAll _ <
clearAll + -> beginStartFind _ <
beginStartFind _ -> ac 0 ^
beginStartFind 0 -> findStartAns 0 <
beginStartFind 1 -> findStartAns 1 <
findStartAns 0 -> findStartAns 0 <
findStartAns 1 -> findStartAns 1 <
findStartAns _ -> ac _ >
findEndB 0 -> findEndB 0 >
findEndB 1 -> findEndB 1 >
findEndB _ -> decB _ <
decB 0 -> decB 1 <
decB 1 -> findPlusLeft 0 <
findPlusLeft 0 -> findPlusLeft 0 <
findPlusLeft 1 -> findPlusLeft 1 < 
findPlusLeft * -> findPlusLeft * <
findPlusLeft B -> findPlusLeft B <
findPlusLeft + -> isA0 + >
isA0 0 -> isA0 0 >
isA0 B -> fillBlanks B <
isA0 1 -> findBarRight 1 >
findBarRight 0 -> findBarRight 0 >
findBarRight 1 -> findBarRight 1 >
findBarRight + -> findBarRight + >
findBarRight B -> decA B <
decA 0 -> decA 1 <
decA 1 -> findEndAns 0 <
findEndAns 0 -> findEndAns 0 <
findEndAns 1 -> findEndAns 1 <
findEndAns + -> incAns + <
incAns _ -> findPlusRight 1 >
incAns 0 -> findPlusRight 1 >
incAns 1 -> incAns 0 <
findPlusRight 0 -> findPlusRight 0 >
findPlusRight 1 -> findPlusRight 1 > 
findPlusRight * -> findPlusRight * >
findPlusRight B -> findPlusRight B >
findPlusRight + -> isA0 + >
fillBlanks 0 -> fillBlanks _ <
fillBlanks 1 -> fillBlanks _ <
fillBlanks + ->	findBarRightToCopy + >
findBarRightToCopy _ -> findBarRightToCopy _ >
findBarRightToCopy B -> findLastA B >
